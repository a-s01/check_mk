value_names = [ 'cpu', 'temp', 'current', 'transmit power', 'receive power', 'voltage', 'OLT Rx power', 'CATV Rx power']
value_units = [ '%', "C", "mA", "dBm", "dBm", "V", "dBm", "dBm"]
precision_table = [ None, None, None, 0.01, 0.01, 0.001, 0.01, 0.01 ]

def check_huawei_olt_optic(item,_no_params,info):
    info = huawei_olt_parse_info(info)
    ok, warn, crit, unknown = range(4)
    status = unknown
    perfdata = []
    infostr = ''

    for port,values in info:
        if port != item:
            continue

        status = ok

        for id, value in enumerate(values):
            if value == '2147483647':
                continue
            if value_names[id] == 'OLT Rx power':
                value = saveint(value)
                value -= 10000                      # dirty hack

            if precision_table[id] is not None:
                value = float(value) * precision_table[id]
                infostr += "%s: %.2f%s; " % (value_names[id], value, value_units[id])
            else: 
                infostr += "%s: %s%s; " % (value_names[id], value, value_units[id])
            if value_names[id] != 'description':
                perfdata.append(("%s-%s" % (value_names[id],value_units[id]), value))

    if infostr == '': infostr = 'No data was found'

    return (status, infostr, perfdata)

def huawei_olt_parse_info(info):
    optic,ifName,descr,cpu = info
    
    ifName = dict(ifName)

    for id in ifName:
        ifName[id] = ifName[id].replace("GPON", "ONT")

    descr = dict(descr)
    cpu = dict(cpu)
    pre_inventory = {}

    for index, value in optic:
        type, port, ontId = index.split('.')
        fullPort = '%s.%s - %s' % (ifName[port],ontId, descr["%s.%s" % (port, ontId)])
        if not pre_inventory.has_key(fullPort):
            pre_inventory[fullPort] = [cpu["%s.%s" % (port, ontId)]]
        pre_inventory[fullPort].append(value)

    return [(name, pre_inventory[name]) for name in pre_inventory]

def inventory_huawei_olt_optic(info):
    preInventory = huawei_olt_parse_info(info)
    inventory = []
    
    for port,values in preInventory:
        count = 0;
        for i in values:
            if i == '2147483647':
                count += 1
        if count == len(values) - 1:
            continue
        
        inventory.append((port,None))

    return inventory

check_info["huawei_olt_optic"] = {
    'check_function':   check_huawei_olt_optic,
    'inventory_function':   inventory_huawei_olt_optic,
    'service_description':  "Sensor info for %s",
    'has_perfdata':         True,
    'snmp_scan_function':   lambda oid: "huawei" in oid(".1.3.6.1.2.1.1.1.0").lower() and \
                                oid(".1.3.6.1.4.1.2011.6.128.1.1.2.51.1.6.*") != None,
    'snmp_info':            [   (".1.3.6.1.4.1.2011.6.128.1.1.2.51", [ # optic info
                                    OID_END,
                                    "1",
#                                    "1", "2", "3", "4", "5", "6",
#                                    "5", "6",
                                ]),
                                (".1.3.6.1.2.1.31.1.1.1", [OID_END, "1"]), #ifName
                                (".1.3.6.1.4.1.2011.6.128.1.1.2.43.1", [
                                    OID_END,
                                    "9", #description
                                ]),
                                ( ".1.3.6.1.4.1.2011.6.145.1.1.1.4.1", [OID_END, "3"]), # cpu
                            ],
}

#.1.3.6.1.4.1.2011.6.145.1.1.1.22.1 -- thresholds

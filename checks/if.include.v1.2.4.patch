--- /root/backup/if.include.before.patch	2014-03-11 12:25:10.387249012 +0200
+++ if.include	2014-03-11 15:03:51.287248771 +0200
@@ -103,7 +103,7 @@
         return ifIndex
 
 
-def inventory_if_common(info, has_nodeinfo = False):
+def inventory_if_common(info, has_nodeinfo = False, type_required = False):
     if has_nodeinfo:
         length = 21
     else:
@@ -174,6 +174,9 @@
 
             if ifType in porttypes and ifOperStatus in portstates:
                 params = {}
+                if type_required:
+                    params["iftype"] = ifType
+
                 if if_inventory_monitor_state:
                     params["state"] = [ifOperStatus]
 
@@ -200,14 +203,33 @@
                 params["speed"] = total_speed
             pre_inventory.append( (group_name, "%r" % params, int(ifIndex)) )
 
-    inventory = []
+    if type_required:
+        inventory = {}
+    else:
+        inventory = []
+
+    import pprint
     # Check for duplicate items (e.g. when using Alias as item and the alias is not unique)
     for item, params, index in pre_inventory:
         if item in duplicate:
             new_item = "%s %d" % (item, index)
         else:
             new_item = item
-        inventory.append((new_item, params))
+
+        if type_required:
+            init_params = eval(params)
+            if init_params.has_key("aggregate"):
+                ifType = "_agg"
+            else:
+                ifType = str(init_params["iftype"])
+                del init_params["iftype"]
+
+            if not inventory.has_key(ifType):
+                inventory[ifType] = []
+
+            inventory[ifType].append((new_item, "%r" % init_params))
+        else:
+            inventory.append((new_item, params))
 
     return inventory
 

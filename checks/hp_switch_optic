hp_value_names = [ 'transmit power', 'receive power', 'temp', 'voltage', 'current' ]
hp_precision_table = [ 0.01, 0.01, 1, 0.01, 0.01 ]
hp_alarm = { 'transmit power' : (-2, -3, 'low'), 'receive power': (-2, -3, 'low') }

def parse_hp_switch_optic(info):
    return parse_switch_optic(info, hp_value_names, hp_precision_table, '2147483647')

def inventory_hp_switch_optic(parsed):
    return inventory_switch_optic(parsed, hp_alarm)

def check_hp_switch_optic(item, params, parsed):
    return check_switch_optic(item, params, parsed, hp_alarm)

check_info["hp_switch_optic"] = {
    'check_function':   check_hp_switch_optic,
    'inventory_function':   inventory_hp_switch_optic,
    'parse_function':        parse_hp_switch_optic,
    'service_description':  "Sensor info for %s",
    'has_perfdata':         True,
    'snmp_scan_function':   lambda oid: "HP Comware" in oid(".1.3.6.1.2.1.1.1.0") and \
                                oid(".1.3.6.1.4.1.25506.2.70.1.1.1.*") != None,
    'snmp_info':            [   (".1.3.6.1.4.1.25506.2.70.1.1.1", [ # optic info
                                    OID_END,
                                    '9',  #tx
                                    '12', #rx
                                    '15', #temp
                                    '16', #v
                                    '17', #bias
                                ]),
                                (".1.3.6.1.2.1.31.1.1.1", [ OID_END, "1" ]),
                            ],
    'includes':             ['optic.include'],
    'group':                'switch_optic',
}

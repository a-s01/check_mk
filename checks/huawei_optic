name_index = [ '', "temp", "voltage", "bias", "rx", "tx" ]
unit_index = [ '', "C", "V", "mA", "dBm", "dBm" ]


def parse_huawei_optic(info):
    names_dict = dict(info[1])

    i = 0
    while i < len(info[0]):
        info[0][i][0] = names_dict[info[0][i][0]]
        i += 1

    return info[0] 

def check_huawei_optic(item, _no_params, parsed):
    perfdata = []
    infostr = ''

    for line in parsed:
        if line[0] == item:
            for x in range(1,6):
                value = float(line[x])
                if x > 1: #only temp (1) doesn't need correction
                    value = value/1000
                    if x >= 4: #power needs translation from W to dBm
                        value = math.log10(value)*10

                infostr += "%s: %.2f%s; " % (name_index[x], value, unit_index[x])
                perfdata.append((name_index[x],value))

            return (0, infostr, perfdata)

    return(3, "UNKNOWN - item wasn't found in snmp data", perfdata)
        

def inventory_huawei_optic(parsed):
    return [(line[0], None) for line in parsed if line[1] != '-255']

check_info["huawei_optic"] = {
    'parse_function':           parse_huawei_optic,
    'check_function':           check_huawei_optic,
    'inventory_function':       inventory_huawei_optic,
    'service_description':      'Optic info for %s',
    'has_perfdata':             True,
    'snmp_scan_function':       lambda oid: oid(".1.3.6.1.4.1.2011.5.25.31.1.1.3.1.6") != None,
    'snmp_info':                [ ( ".1.3.6.1.4.1.2011.5.25.31.1.1.3.1", [
                                        OID_END,
                                        "5", # temperature
                                        "6", # voltage
                                        "7", # bias
                                        "8", # rx power
                                        "9", # tx power 
                                    ]),
                                  ( ".1.3.6.1.2.1.47.1.1.1.1", [OID_END, 7])
                                ]

}
